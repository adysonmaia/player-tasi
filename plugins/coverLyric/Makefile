#############################################################################
# Makefile for building: libcoverLyric.so
# Generated by qmake (2.01a) (Qt 4.5.2) on: seg nov 23 20:53:21 2009
# Project:  coverLyric.pro
# Template: lib
# Command: /usr/bin/qmake-qt4 -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile coverLyric.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_PLUGIN -DQT_WEBKIT_LIB -DQT_PHONON_LIB -DQT_XML_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT -fPIC $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT -fPIC $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtXml -I/usr/include/qt4/phonon -I/usr/include/qt4/QtWebKit -I/usr/include/qt4 -I../../../player-tasi -I.
LINK          = g++
LFLAGS        = -shared
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtWebKit -lphonon -lQtXml -lQtGui -lQtNetwork -lQtCore -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = coverlyric.cpp \
		controller.cpp \
		covermodel.cpp \
		lyricmodel.cpp moc_coverlyric.cpp \
		moc_controller.cpp \
		moc_covermodel.cpp \
		moc_lyricmodel.cpp
OBJECTS       = coverlyric.o \
		controller.o \
		covermodel.o \
		lyricmodel.o \
		moc_coverlyric.o \
		moc_controller.o \
		moc_covermodel.o \
		moc_lyricmodel.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		coverLyric.pro
QMAKE_TARGET  = coverLyric
DESTDIR       = ../../plugins/
TARGET        = libcoverLyric.so
TARGETD       = libcoverLyric.so

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile  ../../plugins/$(TARGET)

../../plugins/$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	@$(CHK_DIR_EXISTS) ../../plugins/ || $(MKDIR) ../../plugins/ 
	-$(DEL_FILE) $(TARGET)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	-$(MOVE) $(TARGET) ../../plugins/



Makefile: coverLyric.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtWebKit.prl \
		/usr/lib/libphonon.prl \
		/usr/lib/libQtXml.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtNetwork.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile coverLyric.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtWebKit.prl:
/usr/lib/libphonon.prl:
/usr/lib/libQtXml.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtNetwork.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile coverLyric.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/coverLyric1.0.0 || $(MKDIR) .tmp/coverLyric1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/coverLyric1.0.0/ && $(COPY_FILE) --parents coverlyric.hpp controller.hpp covermodel.hpp lyricmodel.hpp .tmp/coverLyric1.0.0/ && $(COPY_FILE) --parents coverlyric.cpp controller.cpp covermodel.cpp lyricmodel.cpp .tmp/coverLyric1.0.0/ && (cd `dirname .tmp/coverLyric1.0.0` && $(TAR) coverLyric1.0.0.tar coverLyric1.0.0 && $(COMPRESS) coverLyric1.0.0.tar) && $(MOVE) `dirname .tmp/coverLyric1.0.0`/coverLyric1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/coverLyric1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_coverlyric.cpp moc_controller.cpp moc_covermodel.cpp moc_lyricmodel.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_coverlyric.cpp moc_controller.cpp moc_covermodel.cpp moc_lyricmodel.cpp
moc_coverlyric.cpp: controller.hpp \
		covermodel.hpp \
		lyricmodel.hpp \
		coverlyric.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) coverlyric.hpp -o moc_coverlyric.cpp

moc_controller.cpp: covermodel.hpp \
		lyricmodel.hpp \
		controller.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) controller.hpp -o moc_controller.cpp

moc_covermodel.cpp: covermodel.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) covermodel.hpp -o moc_covermodel.cpp

moc_lyricmodel.cpp: lyricmodel.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) lyricmodel.hpp -o moc_lyricmodel.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

coverlyric.o: coverlyric.cpp coverlyric.hpp \
		controller.hpp \
		covermodel.hpp \
		lyricmodel.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o coverlyric.o coverlyric.cpp

controller.o: controller.cpp controller.hpp \
		covermodel.hpp \
		lyricmodel.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o controller.o controller.cpp

covermodel.o: covermodel.cpp covermodel.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o covermodel.o covermodel.cpp

lyricmodel.o: lyricmodel.cpp lyricmodel.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o lyricmodel.o lyricmodel.cpp

moc_coverlyric.o: moc_coverlyric.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_coverlyric.o moc_coverlyric.cpp

moc_controller.o: moc_controller.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_controller.o moc_controller.cpp

moc_covermodel.o: moc_covermodel.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_covermodel.o moc_covermodel.cpp

moc_lyricmodel.o: moc_lyricmodel.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_lyricmodel.o moc_lyricmodel.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

